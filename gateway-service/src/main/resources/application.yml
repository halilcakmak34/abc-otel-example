
spring:
  application:
    name: gateway-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:6900/otel-db}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    hikari:
      connection-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 15
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  zipkin:
    base-url: ${ZIPKIN_FULL_URL:http://localhost:5411}
    enabled: true
    service:
      name: gateway-service
    message-timeout: 10
    sleuth:
      sampler:
        probability: 1.0
    servlet:
      multipart:
        max-file-size: 10MB
        max-request-size: 10MB
  kafka:
    bootstrap-servers: ${KAFKA_FULL_URL:localhost:5092}
    topics:
      test:
        name: test-topic
        partitions: 1
        replication-factor: 1
      reservation:
        name: reservation-topic
        partitions: 1
        replication-factor: 1
      abc-logger:
        name: abc-logger-topic
        partitions: 1
        replication-factor: 1
  cloud:
    gateway:
      routes:
        - id: otel-service
          uri: http://localhost:5002
          predicates:
            - Path=/api/otel-service/**
          filters:
            - RewritePath=/otel-service(?<segment>/.*|), /api/otel-service\${segment}
        - id: notification-service
          uri: http://localhost:5001
          predicates:
            - Path=/api/notification-service/**
          filters:
            - RewritePath=/notification-service(?<segment>/.*|), /api/notification-service\${segment}
        - id: reservation-service
          uri: http://localhost:5003
          predicates:
            - Path=/api/reservation-service/**
          filters:
            - RewritePath=/reservation-service(?<segment>/.*|), /api/reservation-service\${segment}

#zuul:
#  sensitiveHeaders:
#  host:
#    socket-timeout-millis: 30000
#    connect-timeout-millis: 30000
#  routes:
#    notification-service:
#      path: /api/notification-service/**
#      serviceId: notification-service
#    otel-service:
#      path: /api/otel-service/**
#      serviceId: otel-service
#    reservation-service:
#      path: /api/reservation-service/**
#      serviceId: reservation-service
#  ribbon:
#    eager-load:
#      enabled: true
#  ribbon-isolation-strategy: THREAD
#
#ribbon:
#  ConnectTimeout: 10000
#  ReadTimeout: 60000
#  eureka:
#    enabled: false
#
#  hystrix:
#    command:
#      default:
#        execution:
#          isolation:
#            thread:
#              timeoutInMilliseconds: 70000

springdoc:
  swagger-ui:
    urls:
      - name: gateway-service
        url: /v3/api-docs
      - name: otel-service
        url: /api/otel-service/v3/api-docs
      - name: notification-service
        url: /api/notification-service/v3/api-docs
      - name: reservation-service
        url: /api/reservation-service/v3/api-docs

application:
  security:
    jwt:
      secret-key: 586B633834416E396D7436753879382F423F4428482B4C6250655367566B5970
      expiration: 900000 #  15 min in ms
      cookie-name: jwt-cookie
      refresh-token:
        expiration: 1296000000 # 15 days in ms
        cookie-name: refresh-jwt-cookie
    basic:
      enabled: true
    user:
      name: admin
      password: admin
      role: EXAMPLE
server:
  port: ${SERVER_PORT:5765}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_FULL_URL:http://localhost:5761/eureka/}
    registerWithEureka: true
    enabled: true #eureka discovery is enabled in this profile
  instance:
    prefer-ip-address: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true
