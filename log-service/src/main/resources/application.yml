spring:
  application:
    name: log-service
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:6900/otel-db}
    username: ${POSTGRES_USERNAME:postgres}
    password: ${POSTGRES_PASSWORD:postgres}
    hikari:
      connection-timeout: 600000
      max-lifetime: 1800000
      maximum-pool-size: 15
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  zipkin:
    base-url: ${ZIPKIN_FULL_URL:http://localhost:9411}
    enabled: true
    service:
      name: reservation-service
    message-timeout: 10
    sleuth:
      sampler:
        probability: 1.0
    servlet:
      multipart:
        max-file-size: 10MB
        max-request-size: 10MB
  kafka:
    bootstrap-servers: ${KAFKA_FULL_URL:localhost:9092}
    consumer:
      group-id: my-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topics:
      test:
        name: test-topic
        partitions: 1
        replication-factor: 1
      reservation:
        name: reservation-topic
        partitions: 1
        replication-factor: 1
      abc-logger:
        name: abc-logger-topic
        partitions: 1
        replication-factor: 1

application:
  security:
    jwt:
      secret-key: 586B633834416E396D7436753879382F423F4428482B4C6250655367566B5970
      expiration: 900000 #  15 min in ms
      cookie-name: jwt-cookie
      refresh-token:
        expiration: 1296000000 # 15 days in ms
        cookie-name: refresh-jwt-cookie

server:
  port: ${SERVER_PORT:5004}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    gateway:
      enabled: true

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_FULL_URL:http://localhost:5761/eureka/}
    registerWithEureka: true
    enabled: true #eureka discovery is enabled in this profile
  instance:
    prefer-ip-address: false